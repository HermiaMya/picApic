from PIL import Image,ImageFont,ImageDraw # PIL 是一个 Python 图像处理库

ascii_char = list("$@B%8&WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\|()1{}[]?-_+~<>i!lI;:,\"^`'. ")
# 是我们的字符画所使用的字符集，一共有 70 个字符，字符的种类与数量可以自己根据字符画的效果反复调试的



# 将256灰度映射到70个字符上，也就是RGB值转字符的函数：
def get_char(r, g, b, alpha=256):  # alpha透明度
   if alpha == 0:
       return ' '
   length = len(ascii_char)
   gray = int(0.2126 * r + 0.7152 * g + 0.0722 * b)  # 计算灰度
   unit = (256.0 + 1) / length
   return ascii_char[int(gray / unit)]  # 不同的灰度对应着不同的字符
   # 通过灰度来区分色块


if __name__ == '__main__':
   img = '4.jpg' # 图片所在位置
   im = Image.open(img)
   WIDTH = 160  # 字符画的宽
   HEIGHT = int(160*im.size[1]/im.size[0])  # 字符画的高
   bm = Image.new("RGB", (WIDTH*8,HEIGHT*8), (255, 255, 255))
   dr = ImageDraw.Draw(bm)
   font = ImageFont.truetype("Lato-Medium.ttf",size=10)
   print(WIDTH,HEIGHT)
   im = im.resize((WIDTH, HEIGHT), Image.NEAREST)
   txt = ""
   for i in range(HEIGHT):
       for j in range(WIDTH):
           if(type(im.getpixel((j, i)))==int):
               brightness = im.getpixel((j, i))
               txt+=  ascii_char[int(round(brightness * len(ascii_char) / 255, 0))-1]
               dr.text((j*8, i*8), ascii_char[int(round(brightness * len(ascii_char) / 255, 0)) - 1], font=font,
                       fill="#000000")
           else:
               txt += get_char(*im.getpixel((j, i))) # 获得相应的字符
               dr.text((j*8,i*8), get_char(*im.getpixel((j, i))), font=font,
                       fill="#000000")
       txt += '\n'
   bm.rotate(270)
   bm.save("4.1.jpg")
   print(txt)  # 打印出字符画
   # 将字符画 写入文件中
   with open("pic", 'w') as f:
       f.write(txt)
